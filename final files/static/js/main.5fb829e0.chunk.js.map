{"version":3,"sources":["mainForm/MainForm.tsx","App.js","serviceWorker.js","index.js"],"names":["Option","Select","validateMessages","required","types","email","number","range","style","padding","Header","Layout","Content","Footer","Sider","MainForm","props","formRef","onValueChange","evt","console","info","setState","showElective","onFinish","values","log","current","getFieldValue","reset","fields","resetFields","state","firstStep","secondStep","React","createRef","this","className","marginTop","name","ref","span","Item","label","extra","rules","offset","format","value","hasFeedback","message","placeholder","onChange","bind","TextArea","type","placement","title","onConfirm","okText","cancelText","htmlType","danger","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.5fb829e0.chunk.js","sourcesContent":["import React from 'react';\nimport { Layout, Popconfirm,  Button, message, Form, Input, Select, Row, Col,  DatePicker, Divider } from 'antd';\nimport '../App.css';\n\nconst { Option } = Select;\n\nconst validateMessages = {\n    required: '${label} is required!',\n    types: {\n        email: '${label} is not validate email!',\n        number: '${label} is not a validate number!',\n    },\n    number: {\n        range: '${label} must be between ${min} and ${max}',\n    },\n};\nconst text = 'All data entered will be lost. Are you sure you want to reset now ?';\n\nconst style = { padding: '8px 10px' };\nconst font12 = { fontSize: '12px' };\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nexport default class MainForm extends React.Component<{}, { current: any, firstStep: any, secondStep: any,showElective: boolean }> {\n    formRef: React.RefObject<any>;\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            current: 0,\n            firstStep: {},\n            secondStep: {},\n            showElective: false\n        };\n        this.formRef = React.createRef();\n    }\n    onValueChange = (evt:any)=> {\n        console.info(evt);\n        if(evt==='class2') {\n            this.setState ({\n                showElective: true\n            })\n        }\n        \n    }\n    onFinish = (values: any) => {\n        console.log(values);\n        console.log(this.formRef.current.getFieldValue());\n    };\n    next() {\n        const current = this.state.current + 1;\n        this.setState({ current });\n        console.info(this.formRef.current);\n    }\n\n    reset = (fields?: any) => {\n        console.log('Resetting Fields' + this.formRef.current.resetFields());\n    }\n\n    prev() {\n        const current = this.state.current - 1;\n        this.setState({ current });\n    }\n\n    render() {\n        return (\n            <>\n                <Layout>\n                    <Header>Example header</Header>\n                    <Content className=\"site-layout\" style={{ padding: '0 10px', marginTop: 64 }}>\n\n\n\n                        {/***\n                                 * Student Details\n                                */}\n                        <Form name=\"nest-messages\" validateMessages={validateMessages} ref={this.formRef} onFinish={this.onFinish}>\n                            <Divider>Enter Student Details</Divider>\n\n                            <Row>\n                                <Col span={11} style={style} className=\"gutter-row\">\n                                    <Form.Item name={['user', 'name']} label=\"Name of Child\" extra={'**Note**: (As in Birth Certificate)'} rules={[{ required: true }]}>\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n\n                                <Col style={style} className=\"gutter-row\" offset={1} span={11}>\n                                    <Form.Item name={['user', 'dateofbirth']} label=\"Date Of Birth\" rules={[{ required: true }]}>\n                                        <DatePicker format={'DD-MM-YYYY'} />\n                                    </Form.Item>\n                                </Col>\n\n                            </Row>\n\n                            {/* <Form.Item name={['user', 'fathersname']} label=\"Father's Name\" rules={[{ type: 'email' }]}> */}\n\n                            <Row>\n                                <Col span={8} style={style}>\n                                    <Form.Item name={['user', 'aadharno']} label=\"AADHAR Number\" rules={[{ required: true }]} >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={8} style={style}>\n                                    <Form.Item name={['user', 'placeofbirth']} label=\"Place Of Birth\">\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={8} style={style}>\n                                    <Form.Item name={['user', 'mothertongue']} label=\"Mother Tongue\">\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col span={12} style={style}>\n                                    <Form.Item name={['user', 'gender']} label=\"Choose Gender\">\n                                        <Select>\n                                            <Select.Option value=\"male\">Male</Select.Option>\n                                            <Select.Option value=\"female\">Female</Select.Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12} style={style}>\n                                    <Form.Item\n                                        name={['user', 'admissionclass']}\n                                        label=\"Select Class for admission\"\n                                        hasFeedback\n                                        rules={[{ required: true, message: 'Please select class in which admission is sought' }]}\n                                    >\n                                        <Select placeholder=\"Please select a class\" onChange={this.onValueChange.bind(this)}>\n                                            <Option value=\"class1\">Class 1</Option>\n                                            <Option value=\"class2\">Class 2</Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                { this.state.showElective && (\n                                <Col span={24} style={style} >\n                                    <Form.Item name={['user', 'electivesubject']} label=\"Choose elective subject\" rules={[{ required: true }]}>\n                                        <Select>\n                                            <Select.Option value=\"elective1\">test1</Select.Option>\n                                            <Select.Option value=\"elective2\">test2</Select.Option>\n                                            <Select.Option value=\"elective3\">test3</Select.Option>\n                                        </Select>\n                                    </Form.Item>\n\n                                </Col>\n                                )}\n                            </Row>\n                            <Row>\n                                <Col span={12} style={style}>\n                                    <Form.Item name={['user', 'tcertificate']} label=\"Transfer Certificate\" rules={[{ required: true }]}>\n                                        <Select>\n                                            <Select.Option value=\"available\">Available</Select.Option>\n                                            <Select.Option value=\"notavailable\">Not available</Select.Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12} style={style}>\n                                    <Form.Item name={['user', 'board']} label=\"Name of Board\" rules={[{ required: true }]}>\n                                        <Select>\n                                            <Select.Option value=\"cbse\">CBSE</Select.Option>\n                                            <Select.Option value=\"stateboard\">State Board</Select.Option>\n                                            <Select.Option value=\"others\">Others</Select.Option>\n                                        </Select>\n                                    </Form.Item>\n\n                                </Col>\n                            </Row>\n                            <Row>\n\n                            </Row>\n                            {/***\n                                 * Father Details\n                                */}\n\n                            <Divider>Enter Parent Details - Father </Divider>\n                            <Row>\n                                <Col span={12} style={style}>\n                                    <Form.Item name={['user', 'fathersname']} label=\"Father's Name\" rules={[{ required: true }]}>\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12} style={style}>\n                                    <Form.Item name={['user', 'fathersqualification']} label=\"Fathers Qualification\" rules={[{ required: false }]}>\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col span={12} style={style}>\n                                    <Form.Item name={['user', 'fathersoccupation']} label=\"Occupation\" rules={[{ required: true }]}>\n                                        <Select>\n                                            <Select.Option value=\"professional\">Professional</Select.Option>\n                                            <Select.Option value=\"service\">Service</Select.Option>\n                                            <Select.Option value=\"business\">Business</Select.Option>\n                                            <Select.Option value=\"others\">Others</Select.Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n\n                                <Col span={12} style={style}>\n                                    <Form.Item name={['user', 'fathersincome']} label=\"Approximate Income\" rules={[{ required: true }]} >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n\n                            </Row>\n\n                            <Row>\n                                <Col span={24} style={style}>\n\n                                    <Form.Item name={['user', 'fathersofficeaddress']} label=\"Designation & Office Address\" extra={'Kindly enter full address with pin code'} rules={[{ required: true }]}>\n                                        <Input.TextArea />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col span={12} style={style}>\n\n                                    <Form.Item name={['user', 'fathersmobile']} label=\"Mobile Number\" extra={'Kindly enter with caution'}  rules={[{ required: true }]}>\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12} style={style}>\n                                    <Form.Item name={['user', 'fathersemail']} label=\"Email ID\" rules={[{ required: true, type: \"email\" }]}>\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n\n\n\n                            {/***\n                                 * Mother Details\n                                */}\n\n\n\n                            <Divider>Enter Parent Details - Mother </Divider>\n                            <Row>\n                                <Col span={12} style={style}>\n\n                                    <Form.Item name={['user', 'mothersname']} rules={[{ required: true }]} label=\"Mother's Name\">\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12} style={style}>\n\n                                    <Form.Item name={['user', 'motherqualification']} label=\"Mothers Qualification\" rules={[{ required: true }]}>\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n\n\n                            <Row>\n                                <Col span={12} style={style}>\n                                    <Form.Item name={['user', 'mothersoccupation']} label=\"Occupation\">\n                                        <Select>\n                                            <Select.Option value=\"professional\">Professional</Select.Option>\n                                            <Select.Option value=\"service\">Service</Select.Option>\n                                            <Select.Option value=\"business\">Business</Select.Option>\n                                            <Select.Option value=\"others\">Others</Select.Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n\n                                <Col span={12} style={style}>\n                                    <Form.Item name={['user', 'mothersincome']} label=\"Approximate Income\" rules={[{ required: false }]}>\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n\n                            </Row>\n\n                            <Row>\n                                \n                                <Col span={24} style={style}>\n                               \n                                    <Form.Item name={['user', 'mothersofficeaddress']} label=\"Designation & Office Address\" extra={'Kindly enter full address with pin code'} rules={[{ required: false }]}>\n                                        <Input.TextArea />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col span={12} style={style}>\n\n                                    <Form.Item name={['user', 'mothersmobile']} label=\"Mobile Number\" rules={[{ required: false}]}>\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12} style={style}>\n                                    <Form.Item name={['user', 'mothersemail']} label=\"Email ID\" rules={[{ required: false, type: \"email\" }]}>\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n\n\n                            {/* **\n                                Guardian Details\n                                */}\n\n\n                            <Divider>Enter Parent Details - Guardian </Divider>\n\n                            <Row>\n                                <Col span={8} style={style}>\n                                    <Form.Item name={['user', 'guardianname']} label=\"Guardian's Name\">\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={8} style={style}>\n                                    <Form.Item name={['user', 'guardianrelationship']} label=\"Guardian's Relationship\">\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12} style={style}>\n                                    <Form.Item name={['user', 'guardianphonenumber']} label=\"Guardian Phone Number \">\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col span={12}>\n                                    <Popconfirm placement=\"topRight\" title={text} onConfirm={this.reset.bind(this)} okText=\"Yes\" cancelText=\"No\">\n                                        <Form.Item >\n                                            <Button htmlType=\"reset\" danger>\n                                                Reset / Cancel\n                        </Button>\n                                        </Form.Item>\n                                    </Popconfirm>\n\n                                </Col>\n                                <Col span={12}>\n                                    <Form.Item >\n                                        <Button type=\"primary\" htmlType=\"submit\">\n                                            Submit\n        </Button>\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                        </Form>\n\n                    </Content>\n                </Layout>\n\n            </>\n        )\n    }\n}\n\n\n","import React from 'react';\nimport { Button } from 'antd';\nimport './App.css';\nimport MainForm from '../src/mainForm/MainForm.tsx';\nconst App = () => (\n  <div className=\"App\">\n    <MainForm></MainForm>\n  </div>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}